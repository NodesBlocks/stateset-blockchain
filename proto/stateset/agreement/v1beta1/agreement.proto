syntax = "proto3";
package stateset.agreement.v1beta1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/stateset/stateset-blockchain/x/agreements/types";

message Agreement {
  string creator = 1;
  string agreement_id = 2;
  string agreementNumber = 3; 
  string agreementName = 4; 
  string agreementType = 5; 
  string agreementStatus = 6; 
  int32 totalAgreementValue = 7; 
  string party = 8; 
  string counterparty = 9; 
  string AgreementStartBlock = 10; 
  string AgreementEndBlock = 11;
}

message MsgCreateAgreement {
  string creator = 1;
  string agreement_id = 2;
  string agreementNumber = 3; 
  string agreementName = 4; 
  string agreementType = 5; 
  string agreementStatus = 6; 
  int32 totalAgreementValue = 7; 
  string party = 8; 
  string counterparty = 9; 
  string AgreementStartBlock = 10; 
  string AgreementEndBlock = 11; 
}

message MsgUpdateAgreement {
  string creator = 1;
  string agreement_id = 2;
  string agreementNumber = 3; 
  string agreementName = 4; 
  string agreementType = 5; 
  string agreementStatus = 6; 
  int32 totalAgreementValue = 7; 
  string party = 8; 
  string counterparty = 9; 
  string AgreementStartBlock = 10; 
  string AgreementEndBlock = 11; 
}

message MsgDeleteAgreement {
  string creator = 1;
  string agreement_id = 2;
}

message MsgActivateAgreement {
  string creator = 1;
  string agreement_id = 2;
}

message MsgAmendAgreement {
  string creator = 1;
  string agreement_id = 2;
}

message MsgRenewAgreement {
  string creator = 1;
  string agreement_id = 2;
}

message MsgTerminateAgreement {
  string creator = 1;
  string agreement_id = 2;
}

message MsgExpireAgreement {
  string creator = 1;
  string agreement_id = 2;
}

enum Action {
  option (gogoproto.goproto_enum_prefix) = false;

  ActionCreate = 0;
  ActionActivate = 1;
  ActionAmend = 2;
  ActionRenew = 3;
  ActionTerminate = 4;
  ActionExpire = 5;
}


// State is an enum which refers to state of an agreement
enum State {
  option (gogoproto.goproto_enum_prefix) = false;
  // Prefix should start with 0 in enum. So declaring dummy state
  invalid = 0 [(gogoproto.enumvalue_customname) = "AgreementStateInvalid"];

  request = 1 [(gogoproto.enumvalue_customname) = "Request"];

  active = 2 [(gogoproto.enumvalue_customname) = "Activated"];

  amended = 3 [(gogoproto.enumvalue_customname) = "Amended"];

  renewed = 4 [(gogoproto.enumvalue_customname) = "Renewed"];

  terminated = 5 [(gogoproto.enumvalue_customname) = "Terminated"]

  expired = 6 [(gogoproto.enumvalue_customname) = "Expired"]
}

State state = 2 [(gogoproto.jsontag) = "state", (gogoproto.moretags) = "yaml:\"state\""];


message AgreementFilters {
  option (gogoproto.equal) = false;

  string owner = 1 [(gogoproto.jsontag) = "owner", (gogoproto.moretags) = "yaml:\"owner\""];

  string state = 2 [(gogoproto.jsontag) = "state", (gogoproto.moretags) = "yaml:\"state\""];

}